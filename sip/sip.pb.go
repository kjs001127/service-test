// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: sip/sip.proto

package sip

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Carrier string  `protobuf:"bytes,1,opt,name=carrier,proto3" json:"carrier,omitempty"`
	CallId  string  `protobuf:"bytes,2,opt,name=callId,proto3" json:"callId,omitempty"`
	From    string  `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To      string  `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Sdp     *string `protobuf:"bytes,5,opt,name=sdp,proto3,oneof" json:"sdp,omitempty"`
}

func (x *SipRequest) Reset() {
	*x = SipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sip_sip_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SipRequest) ProtoMessage() {}

func (x *SipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sip_sip_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SipRequest.ProtoReflect.Descriptor instead.
func (*SipRequest) Descriptor() ([]byte, []int) {
	return file_sip_sip_proto_rawDescGZIP(), []int{0}
}

func (x *SipRequest) GetCarrier() string {
	if x != nil {
		return x.Carrier
	}
	return ""
}

func (x *SipRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *SipRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SipRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SipRequest) GetSdp() string {
	if x != nil && x.Sdp != nil {
		return *x.Sdp
	}
	return ""
}

type SipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallId string `protobuf:"bytes,1,opt,name=callId,proto3" json:"callId,omitempty"`
}

func (x *SipResponse) Reset() {
	*x = SipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sip_sip_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SipResponse) ProtoMessage() {}

func (x *SipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sip_sip_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SipResponse.ProtoReflect.Descriptor instead.
func (*SipResponse) Descriptor() ([]byte, []int) {
	return file_sip_sip_proto_rawDescGZIP(), []int{1}
}

func (x *SipResponse) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

var File_sip_sip_proto protoreflect.FileDescriptor

var file_sip_sip_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x69, 0x70, 0x2f, 0x73, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x73, 0x69, 0x70, 0x22, 0x81, 0x01, 0x0a, 0x0a, 0x53, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x15, 0x0a, 0x03, 0x73, 0x64, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x64, 0x70, 0x88, 0x01, 0x01,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x64, 0x70, 0x22, 0x25, 0x0a, 0x0b, 0x53, 0x69, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x32,
	0xff, 0x01, 0x0a, 0x03, 0x53, 0x69, 0x70, 0x12, 0x31, 0x0a, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x0f, 0x2e, 0x73, 0x69, 0x70, 0x2e, 0x53, 0x69, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73, 0x69, 0x70, 0x2e, 0x53, 0x69, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0a, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x0f, 0x2e, 0x73, 0x69, 0x70, 0x2e, 0x53,
	0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73, 0x69, 0x70, 0x2e,
	0x53, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a,
	0x08, 0x44, 0x65, 0x6e, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x0f, 0x2e, 0x73, 0x69, 0x70, 0x2e,
	0x53, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73, 0x69, 0x70,
	0x2e, 0x53, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31,
	0x0a, 0x0a, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x0f, 0x2e, 0x73,
	0x69, 0x70, 0x2e, 0x53, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x73, 0x69, 0x70, 0x2e, 0x53, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x2e, 0x0a, 0x07, 0x42, 0x79, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x0f, 0x2e, 0x73,
	0x69, 0x70, 0x2e, 0x53, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x73, 0x69, 0x70, 0x2e, 0x53, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2d, 0x69, 0x6f, 0x2f, 0x63, 0x68, 0x2d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x69, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sip_sip_proto_rawDescOnce sync.Once
	file_sip_sip_proto_rawDescData = file_sip_sip_proto_rawDesc
)

func file_sip_sip_proto_rawDescGZIP() []byte {
	file_sip_sip_proto_rawDescOnce.Do(func() {
		file_sip_sip_proto_rawDescData = protoimpl.X.CompressGZIP(file_sip_sip_proto_rawDescData)
	})
	return file_sip_sip_proto_rawDescData
}

var file_sip_sip_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sip_sip_proto_goTypes = []interface{}{
	(*SipRequest)(nil),  // 0: sip.SipRequest
	(*SipResponse)(nil), // 1: sip.SipResponse
}
var file_sip_sip_proto_depIdxs = []int32{
	0, // 0: sip.Sip.InviteCall:input_type -> sip.SipRequest
	0, // 1: sip.Sip.AcceptCall:input_type -> sip.SipRequest
	0, // 2: sip.Sip.DenyCall:input_type -> sip.SipRequest
	0, // 3: sip.Sip.CancelCall:input_type -> sip.SipRequest
	0, // 4: sip.Sip.ByeCall:input_type -> sip.SipRequest
	1, // 5: sip.Sip.InviteCall:output_type -> sip.SipResponse
	1, // 6: sip.Sip.AcceptCall:output_type -> sip.SipResponse
	1, // 7: sip.Sip.DenyCall:output_type -> sip.SipResponse
	1, // 8: sip.Sip.CancelCall:output_type -> sip.SipResponse
	1, // 9: sip.Sip.ByeCall:output_type -> sip.SipResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sip_sip_proto_init() }
func file_sip_sip_proto_init() {
	if File_sip_sip_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sip_sip_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sip_sip_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sip_sip_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sip_sip_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sip_sip_proto_goTypes,
		DependencyIndexes: file_sip_sip_proto_depIdxs,
		MessageInfos:      file_sip_sip_proto_msgTypes,
	}.Build()
	File_sip_sip_proto = out.File
	file_sip_sip_proto_rawDesc = nil
	file_sip_sip_proto_goTypes = nil
	file_sip_sip_proto_depIdxs = nil
}
