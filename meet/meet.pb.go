// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: meet/meet.proto

package meet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResponseCode int32

const (
	ResponseCode_SUCCESS      ResponseCode = 0 // 200
	ResponseCode_BAD_REQUEST  ResponseCode = 1 // 400
	ResponseCode_UNAUTHORIZED ResponseCode = 2 // 401
	ResponseCode_FORBIDDEN    ResponseCode = 3 // 403
	ResponseCode_NOT_FOUND    ResponseCode = 4 // 404
	ResponseCode_UNKNOWN      ResponseCode = 5 // 500
)

// Enum value maps for ResponseCode.
var (
	ResponseCode_name = map[int32]string{
		0: "SUCCESS",
		1: "BAD_REQUEST",
		2: "UNAUTHORIZED",
		3: "FORBIDDEN",
		4: "NOT_FOUND",
		5: "UNKNOWN",
	}
	ResponseCode_value = map[string]int32{
		"SUCCESS":      0,
		"BAD_REQUEST":  1,
		"UNAUTHORIZED": 2,
		"FORBIDDEN":    3,
		"NOT_FOUND":    4,
		"UNKNOWN":      5,
	}
)

func (x ResponseCode) Enum() *ResponseCode {
	p := new(ResponseCode)
	*p = x
	return p
}

func (x ResponseCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseCode) Descriptor() protoreflect.EnumDescriptor {
	return file_meet_meet_proto_enumTypes[0].Descriptor()
}

func (ResponseCode) Type() protoreflect.EnumType {
	return &file_meet_meet_proto_enumTypes[0]
}

func (x ResponseCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseCode.Descriptor instead.
func (ResponseCode) EnumDescriptor() ([]byte, []int) {
	return file_meet_meet_proto_rawDescGZIP(), []int{0}
}

type AudioFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket      string  `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key         string  `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Name        string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ContentType string  `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Duration    float64 `protobuf:"fixed64,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Size        int64   `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *AudioFile) Reset() {
	*x = AudioFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meet_meet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioFile) ProtoMessage() {}

func (x *AudioFile) ProtoReflect() protoreflect.Message {
	mi := &file_meet_meet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioFile.ProtoReflect.Descriptor instead.
func (*AudioFile) Descriptor() ([]byte, []int) {
	return file_meet_meet_proto_rawDescGZIP(), []int{0}
}

func (x *AudioFile) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *AudioFile) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AudioFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AudioFile) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *AudioFile) GetDuration() float64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *AudioFile) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type Person struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Person) Reset() {
	*x = Person{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meet_meet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_meet_meet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_meet_meet_proto_rawDescGZIP(), []int{1}
}

func (x *Person) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Person) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Person   *Person `protobuf:"bytes,1,opt,name=person,proto3" json:"person,omitempty"`
	DeviceId string  `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meet_meet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_meet_meet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_meet_meet_proto_rawDescGZIP(), []int{2}
}

func (x *Peer) GetPerson() *Person {
	if x != nil {
		return x.Person
	}
	return nil
}

func (x *Peer) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type BareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode ResponseCode `protobuf:"varint,1,opt,name=response_code,json=responseCode,proto3,enum=meet.ResponseCode" json:"response_code,omitempty"`
}

func (x *BareResponse) Reset() {
	*x = BareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meet_meet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BareResponse) ProtoMessage() {}

func (x *BareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meet_meet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BareResponse.ProtoReflect.Descriptor instead.
func (*BareResponse) Descriptor() ([]byte, []int) {
	return file_meet_meet_proto_rawDescGZIP(), []int{3}
}

func (x *BareResponse) GetResponseCode() ResponseCode {
	if x != nil {
		return x.ResponseCode
	}
	return ResponseCode_SUCCESS
}

type InboundMeetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From        string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To          string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Carrier     string `protobuf:"bytes,3,opt,name=carrier,proto3" json:"carrier,omitempty"`
	SfuServerId string `protobuf:"bytes,4,opt,name=sfu_server_id,json=sfuServerId,proto3" json:"sfu_server_id,omitempty"`
	DeviceId    string `protobuf:"bytes,5,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	MeetId      string `protobuf:"bytes,6,opt,name=meet_id,json=meetId,proto3" json:"meet_id,omitempty"`
}

func (x *InboundMeetRequest) Reset() {
	*x = InboundMeetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meet_meet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundMeetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundMeetRequest) ProtoMessage() {}

func (x *InboundMeetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meet_meet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboundMeetRequest.ProtoReflect.Descriptor instead.
func (*InboundMeetRequest) Descriptor() ([]byte, []int) {
	return file_meet_meet_proto_rawDescGZIP(), []int{4}
}

func (x *InboundMeetRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *InboundMeetRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *InboundMeetRequest) GetCarrier() string {
	if x != nil {
		return x.Carrier
	}
	return ""
}

func (x *InboundMeetRequest) GetSfuServerId() string {
	if x != nil {
		return x.SfuServerId
	}
	return ""
}

func (x *InboundMeetRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *InboundMeetRequest) GetMeetId() string {
	if x != nil {
		return x.MeetId
	}
	return ""
}

type JoinMeetByUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer   *Peer  `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	MeetId string `protobuf:"bytes,2,opt,name=meet_id,json=meetId,proto3" json:"meet_id,omitempty"`
}

func (x *JoinMeetByUserRequest) Reset() {
	*x = JoinMeetByUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meet_meet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinMeetByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinMeetByUserRequest) ProtoMessage() {}

func (x *JoinMeetByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meet_meet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinMeetByUserRequest.ProtoReflect.Descriptor instead.
func (*JoinMeetByUserRequest) Descriptor() ([]byte, []int) {
	return file_meet_meet_proto_rawDescGZIP(), []int{5}
}

func (x *JoinMeetByUserRequest) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *JoinMeetByUserRequest) GetMeetId() string {
	if x != nil {
		return x.MeetId
	}
	return ""
}

type HangUpMeetByManagerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer   *Peer  `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	MeetId string `protobuf:"bytes,2,opt,name=meet_id,json=meetId,proto3" json:"meet_id,omitempty"`
}

func (x *HangUpMeetByManagerRequest) Reset() {
	*x = HangUpMeetByManagerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meet_meet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HangUpMeetByManagerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HangUpMeetByManagerRequest) ProtoMessage() {}

func (x *HangUpMeetByManagerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meet_meet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HangUpMeetByManagerRequest.ProtoReflect.Descriptor instead.
func (*HangUpMeetByManagerRequest) Descriptor() ([]byte, []int) {
	return file_meet_meet_proto_rawDescGZIP(), []int{6}
}

func (x *HangUpMeetByManagerRequest) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *HangUpMeetByManagerRequest) GetMeetId() string {
	if x != nil {
		return x.MeetId
	}
	return ""
}

type InitializeInboundMeetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To   string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	From string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
}

func (x *InitializeInboundMeetRequest) Reset() {
	*x = InitializeInboundMeetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meet_meet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeInboundMeetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeInboundMeetRequest) ProtoMessage() {}

func (x *InitializeInboundMeetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meet_meet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeInboundMeetRequest.ProtoReflect.Descriptor instead.
func (*InitializeInboundMeetRequest) Descriptor() ([]byte, []int) {
	return file_meet_meet_proto_rawDescGZIP(), []int{7}
}

func (x *InitializeInboundMeetRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *InitializeInboundMeetRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

type CreateMeetRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeetId     string     `protobuf:"bytes,1,opt,name=meet_id,json=meetId,proto3" json:"meet_id,omitempty"`
	MeetRecord *AudioFile `protobuf:"bytes,2,opt,name=meet_record,json=meetRecord,proto3" json:"meet_record,omitempty"`
}

func (x *CreateMeetRecordRequest) Reset() {
	*x = CreateMeetRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meet_meet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMeetRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMeetRecordRequest) ProtoMessage() {}

func (x *CreateMeetRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meet_meet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMeetRecordRequest.ProtoReflect.Descriptor instead.
func (*CreateMeetRecordRequest) Descriptor() ([]byte, []int) {
	return file_meet_meet_proto_rawDescGZIP(), []int{8}
}

func (x *CreateMeetRecordRequest) GetMeetId() string {
	if x != nil {
		return x.MeetId
	}
	return ""
}

func (x *CreateMeetRecordRequest) GetMeetRecord() *AudioFile {
	if x != nil {
		return x.MeetRecord
	}
	return nil
}

type OutboundMeetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeetId            string  `protobuf:"bytes,1,opt,name=meet_id,json=meetId,proto3" json:"meet_id,omitempty"`
	From              string  `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To                string  `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Carrier           string  `protobuf:"bytes,4,opt,name=carrier,proto3" json:"carrier,omitempty"`
	User              *Person `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	Manager           *Peer   `protobuf:"bytes,6,opt,name=manager,proto3" json:"manager,omitempty"`
	GuideVoiceUrl     string  `protobuf:"bytes,7,opt,name=guide_voice_url,json=guideVoiceUrl,proto3" json:"guide_voice_url,omitempty"`
	PAssertedIdentity string  `protobuf:"bytes,8,opt,name=p_asserted_identity,json=pAssertedIdentity,proto3" json:"p_asserted_identity,omitempty"`
}

func (x *OutboundMeetRequest) Reset() {
	*x = OutboundMeetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meet_meet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutboundMeetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutboundMeetRequest) ProtoMessage() {}

func (x *OutboundMeetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meet_meet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutboundMeetRequest.ProtoReflect.Descriptor instead.
func (*OutboundMeetRequest) Descriptor() ([]byte, []int) {
	return file_meet_meet_proto_rawDescGZIP(), []int{9}
}

func (x *OutboundMeetRequest) GetMeetId() string {
	if x != nil {
		return x.MeetId
	}
	return ""
}

func (x *OutboundMeetRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *OutboundMeetRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *OutboundMeetRequest) GetCarrier() string {
	if x != nil {
		return x.Carrier
	}
	return ""
}

func (x *OutboundMeetRequest) GetUser() *Person {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *OutboundMeetRequest) GetManager() *Peer {
	if x != nil {
		return x.Manager
	}
	return nil
}

func (x *OutboundMeetRequest) GetGuideVoiceUrl() string {
	if x != nil {
		return x.GuideVoiceUrl
	}
	return ""
}

func (x *OutboundMeetRequest) GetPAssertedIdentity() string {
	if x != nil {
		return x.PAssertedIdentity
	}
	return ""
}

type InboundMeetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode ResponseCode `protobuf:"varint,1,opt,name=response_code,json=responseCode,proto3,enum=meet.ResponseCode" json:"response_code,omitempty"`
	MeetId       string       `protobuf:"bytes,2,opt,name=meet_id,json=meetId,proto3" json:"meet_id,omitempty"`
	Peer         *Peer        `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *InboundMeetResponse) Reset() {
	*x = InboundMeetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meet_meet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundMeetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundMeetResponse) ProtoMessage() {}

func (x *InboundMeetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meet_meet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboundMeetResponse.ProtoReflect.Descriptor instead.
func (*InboundMeetResponse) Descriptor() ([]byte, []int) {
	return file_meet_meet_proto_rawDescGZIP(), []int{10}
}

func (x *InboundMeetResponse) GetResponseCode() ResponseCode {
	if x != nil {
		return x.ResponseCode
	}
	return ResponseCode_SUCCESS
}

func (x *InboundMeetResponse) GetMeetId() string {
	if x != nil {
		return x.MeetId
	}
	return ""
}

func (x *InboundMeetResponse) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

type PrivateMeetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeetId  string `protobuf:"bytes,1,opt,name=meet_id,json=meetId,proto3" json:"meet_id,omitempty"`
	Manager *Peer  `protobuf:"bytes,2,opt,name=manager,proto3" json:"manager,omitempty"`
}

func (x *PrivateMeetRequest) Reset() {
	*x = PrivateMeetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meet_meet_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivateMeetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateMeetRequest) ProtoMessage() {}

func (x *PrivateMeetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meet_meet_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateMeetRequest.ProtoReflect.Descriptor instead.
func (*PrivateMeetRequest) Descriptor() ([]byte, []int) {
	return file_meet_meet_proto_rawDescGZIP(), []int{11}
}

func (x *PrivateMeetRequest) GetMeetId() string {
	if x != nil {
		return x.MeetId
	}
	return ""
}

func (x *PrivateMeetRequest) GetManager() *Peer {
	if x != nil {
		return x.Manager
	}
	return nil
}

type JoinMeetByManagerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer   *Peer  `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	MeetId string `protobuf:"bytes,2,opt,name=meet_id,json=meetId,proto3" json:"meet_id,omitempty"`
}

func (x *JoinMeetByManagerRequest) Reset() {
	*x = JoinMeetByManagerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meet_meet_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinMeetByManagerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinMeetByManagerRequest) ProtoMessage() {}

func (x *JoinMeetByManagerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meet_meet_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinMeetByManagerRequest.ProtoReflect.Descriptor instead.
func (*JoinMeetByManagerRequest) Descriptor() ([]byte, []int) {
	return file_meet_meet_proto_rawDescGZIP(), []int{12}
}

func (x *JoinMeetByManagerRequest) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *JoinMeetByManagerRequest) GetMeetId() string {
	if x != nil {
		return x.MeetId
	}
	return ""
}

type JoinMeetByUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode ResponseCode `protobuf:"varint,1,opt,name=response_code,json=responseCode,proto3,enum=meet.ResponseCode" json:"response_code,omitempty"`
	Peer         *Peer        `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *JoinMeetByUserResponse) Reset() {
	*x = JoinMeetByUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meet_meet_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinMeetByUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinMeetByUserResponse) ProtoMessage() {}

func (x *JoinMeetByUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meet_meet_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinMeetByUserResponse.ProtoReflect.Descriptor instead.
func (*JoinMeetByUserResponse) Descriptor() ([]byte, []int) {
	return file_meet_meet_proto_rawDescGZIP(), []int{13}
}

func (x *JoinMeetByUserResponse) GetResponseCode() ResponseCode {
	if x != nil {
		return x.ResponseCode
	}
	return ResponseCode_SUCCESS
}

func (x *JoinMeetByUserResponse) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

type TerminateMeetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeetId        string  `protobuf:"bytes,1,opt,name=meet_id,json=meetId,proto3" json:"meet_id,omitempty"`
	ChannelId     string  `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	GuideVoiceUrl *string `protobuf:"bytes,3,opt,name=guide_voice_url,json=guideVoiceUrl,proto3,oneof" json:"guide_voice_url,omitempty"`
}

func (x *TerminateMeetRequest) Reset() {
	*x = TerminateMeetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meet_meet_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateMeetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateMeetRequest) ProtoMessage() {}

func (x *TerminateMeetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meet_meet_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateMeetRequest.ProtoReflect.Descriptor instead.
func (*TerminateMeetRequest) Descriptor() ([]byte, []int) {
	return file_meet_meet_proto_rawDescGZIP(), []int{14}
}

func (x *TerminateMeetRequest) GetMeetId() string {
	if x != nil {
		return x.MeetId
	}
	return ""
}

func (x *TerminateMeetRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *TerminateMeetRequest) GetGuideVoiceUrl() string {
	if x != nil && x.GuideVoiceUrl != nil {
		return *x.GuideVoiceUrl
	}
	return ""
}

type HangUpMeetByUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer   *Peer  `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	MeetId string `protobuf:"bytes,2,opt,name=meet_id,json=meetId,proto3" json:"meet_id,omitempty"`
}

func (x *HangUpMeetByUserRequest) Reset() {
	*x = HangUpMeetByUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meet_meet_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HangUpMeetByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HangUpMeetByUserRequest) ProtoMessage() {}

func (x *HangUpMeetByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meet_meet_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HangUpMeetByUserRequest.ProtoReflect.Descriptor instead.
func (*HangUpMeetByUserRequest) Descriptor() ([]byte, []int) {
	return file_meet_meet_proto_rawDescGZIP(), []int{15}
}

func (x *HangUpMeetByUserRequest) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *HangUpMeetByUserRequest) GetMeetId() string {
	if x != nil {
		return x.MeetId
	}
	return ""
}

type InitializeInboundMeetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMeetAvailable bool   `protobuf:"varint,1,opt,name=is_meet_available,json=isMeetAvailable,proto3" json:"is_meet_available,omitempty"`
	GuideVoiceUrl   string `protobuf:"bytes,2,opt,name=guide_voice_url,json=guideVoiceUrl,proto3" json:"guide_voice_url,omitempty"`
	MeetId          string `protobuf:"bytes,3,opt,name=meet_id,json=meetId,proto3" json:"meet_id,omitempty"`
}

func (x *InitializeInboundMeetResponse) Reset() {
	*x = InitializeInboundMeetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meet_meet_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeInboundMeetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeInboundMeetResponse) ProtoMessage() {}

func (x *InitializeInboundMeetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meet_meet_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeInboundMeetResponse.ProtoReflect.Descriptor instead.
func (*InitializeInboundMeetResponse) Descriptor() ([]byte, []int) {
	return file_meet_meet_proto_rawDescGZIP(), []int{16}
}

func (x *InitializeInboundMeetResponse) GetIsMeetAvailable() bool {
	if x != nil {
		return x.IsMeetAvailable
	}
	return false
}

func (x *InitializeInboundMeetResponse) GetGuideVoiceUrl() string {
	if x != nil {
		return x.GuideVoiceUrl
	}
	return ""
}

func (x *InitializeInboundMeetResponse) GetMeetId() string {
	if x != nil {
		return x.MeetId
	}
	return ""
}

type RejectMeetByUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Person *Person `protobuf:"bytes,1,opt,name=person,proto3" json:"person,omitempty"`
	MeetId string  `protobuf:"bytes,2,opt,name=meet_id,json=meetId,proto3" json:"meet_id,omitempty"`
}

func (x *RejectMeetByUserRequest) Reset() {
	*x = RejectMeetByUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meet_meet_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectMeetByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectMeetByUserRequest) ProtoMessage() {}

func (x *RejectMeetByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meet_meet_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectMeetByUserRequest.ProtoReflect.Descriptor instead.
func (*RejectMeetByUserRequest) Descriptor() ([]byte, []int) {
	return file_meet_meet_proto_rawDescGZIP(), []int{17}
}

func (x *RejectMeetByUserRequest) GetPerson() *Person {
	if x != nil {
		return x.Person
	}
	return nil
}

func (x *RejectMeetByUserRequest) GetMeetId() string {
	if x != nil {
		return x.MeetId
	}
	return ""
}

var File_meet_meet_proto protoreflect.FileDescriptor

var file_meet_meet_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6d, 0x65, 0x65, 0x74, 0x2f, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x6d, 0x65, 0x65, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x09, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x2c, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x06,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d,
	0x65, 0x65, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22,
	0x47, 0x0a, 0x0c, 0x42, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x22, 0x0a,
	0x0d, 0x73, 0x66, 0x75, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x66, 0x75, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x65, 0x65, 0x74, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x15, 0x4a, 0x6f, 0x69, 0x6e, 0x4d,
	0x65, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72,
	0x12, 0x17, 0x0a, 0x07, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x65, 0x65, 0x74, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x1a, 0x48, 0x61, 0x6e,
	0x67, 0x55, 0x70, 0x4d, 0x65, 0x65, 0x74, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x65, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x65, 0x74, 0x49, 0x64,
	0x22, 0x42, 0x0a, 0x1c, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x49, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x22, 0x64, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x65, 0x65, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0b, 0x6d, 0x65, 0x65, 0x74,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x65, 0x65, 0x74, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0a,
	0x6d, 0x65, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x8c, 0x02, 0x0a, 0x13, 0x4f,
	0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x07, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d,
	0x65, 0x65, 0x74, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x75, 0x69, 0x64, 0x65, 0x5f, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x75, 0x69, 0x64,
	0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x41, 0x73, 0x73, 0x65, 0x72, 0x74, 0x65,
	0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x87, 0x01, 0x0a, 0x13, 0x49, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x65,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70,
	0x65, 0x65, 0x72, 0x22, 0x53, 0x0a, 0x12, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x65, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52,
	0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x22, 0x53, 0x0a, 0x18, 0x4a, 0x6f, 0x69, 0x6e,
	0x4d, 0x65, 0x65, 0x74, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04,
	0x70, 0x65, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x65, 0x74, 0x49, 0x64, 0x22, 0x71, 0x0a,
	0x16, 0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x65, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1e, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72,
	0x22, 0x8f, 0x01, 0x0a, 0x14, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x65, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x2b, 0x0a, 0x0f, 0x67, 0x75, 0x69, 0x64, 0x65, 0x5f, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x75,
	0x69, 0x64, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x12,
	0x0a, 0x10, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x65, 0x5f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x22, 0x52, 0x0a, 0x17, 0x48, 0x61, 0x6e, 0x67, 0x55, 0x70, 0x4d, 0x65, 0x65, 0x74,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x65,
	0x65, 0x74, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x17, 0x0a,
	0x07, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x65, 0x65, 0x74, 0x49, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x1d, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x6d,
	0x65, 0x65, 0x74, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x4d, 0x65, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x75, 0x69, 0x64, 0x65, 0x5f, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67,
	0x75, 0x69, 0x64, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07,
	0x6d, 0x65, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x65, 0x65, 0x74, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x17, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4d,
	0x65, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x06,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x65, 0x74, 0x49, 0x64, 0x2a,
	0x69, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b,
	0x42, 0x41, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x10, 0x0a,
	0x0c, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x0d, 0x0a, 0x09, 0x46, 0x4f, 0x52, 0x42, 0x49, 0x44, 0x44, 0x45, 0x4e, 0x10, 0x03, 0x12, 0x0d,
	0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x04, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x05, 0x32, 0xb0, 0x06, 0x0a, 0x0b, 0x4d,
	0x65, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x65, 0x74,
	0x12, 0x19, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x4d, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6d, 0x65,
	0x65, 0x74, 0x2e, 0x42, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x41, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x65, 0x74, 0x12, 0x18, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x42, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4b, 0x0a, 0x13, 0x48, 0x61, 0x6e, 0x67, 0x55, 0x70, 0x4d, 0x65, 0x65, 0x74,
	0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x65, 0x74,
	0x2e, 0x48, 0x61, 0x6e, 0x67, 0x55, 0x70, 0x4d, 0x65, 0x65, 0x74, 0x42, 0x79, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6d, 0x65,
	0x65, 0x74, 0x2e, 0x42, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x11, 0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x65, 0x65, 0x74, 0x42, 0x79, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x4a, 0x6f, 0x69, 0x6e,
	0x4d, 0x65, 0x65, 0x74, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x42, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x54, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x65, 0x74, 0x12, 0x1a, 0x2e, 0x6d, 0x65, 0x65, 0x74,
	0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x42, 0x61, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x65, 0x74, 0x12, 0x18,
	0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e,
	0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x42, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x15, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d,
	0x65, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x4d, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e,
	0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x65, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1b,
	0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x65, 0x65, 0x74, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6d, 0x65,
	0x65, 0x74, 0x2e, 0x42, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x45, 0x0a, 0x10, 0x48, 0x61, 0x6e, 0x67, 0x55, 0x70, 0x4d, 0x65, 0x65, 0x74, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x48, 0x61, 0x6e, 0x67, 0x55,
	0x70, 0x4d, 0x65, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x42, 0x61, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x4d, 0x65, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x65,
	0x74, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6d, 0x65, 0x65, 0x74,
	0x2e, 0x42, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3d, 0x0a,
	0x14, 0x69, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2d, 0x69, 0x6f, 0x2f, 0x63,
	0x68, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_meet_meet_proto_rawDescOnce sync.Once
	file_meet_meet_proto_rawDescData = file_meet_meet_proto_rawDesc
)

func file_meet_meet_proto_rawDescGZIP() []byte {
	file_meet_meet_proto_rawDescOnce.Do(func() {
		file_meet_meet_proto_rawDescData = protoimpl.X.CompressGZIP(file_meet_meet_proto_rawDescData)
	})
	return file_meet_meet_proto_rawDescData
}

var file_meet_meet_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_meet_meet_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_meet_meet_proto_goTypes = []interface{}{
	(ResponseCode)(0),                     // 0: meet.ResponseCode
	(*AudioFile)(nil),                     // 1: meet.AudioFile
	(*Person)(nil),                        // 2: meet.Person
	(*Peer)(nil),                          // 3: meet.Peer
	(*BareResponse)(nil),                  // 4: meet.BareResponse
	(*InboundMeetRequest)(nil),            // 5: meet.InboundMeetRequest
	(*JoinMeetByUserRequest)(nil),         // 6: meet.JoinMeetByUserRequest
	(*HangUpMeetByManagerRequest)(nil),    // 7: meet.HangUpMeetByManagerRequest
	(*InitializeInboundMeetRequest)(nil),  // 8: meet.InitializeInboundMeetRequest
	(*CreateMeetRecordRequest)(nil),       // 9: meet.CreateMeetRecordRequest
	(*OutboundMeetRequest)(nil),           // 10: meet.OutboundMeetRequest
	(*InboundMeetResponse)(nil),           // 11: meet.InboundMeetResponse
	(*PrivateMeetRequest)(nil),            // 12: meet.PrivateMeetRequest
	(*JoinMeetByManagerRequest)(nil),      // 13: meet.JoinMeetByManagerRequest
	(*JoinMeetByUserResponse)(nil),        // 14: meet.JoinMeetByUserResponse
	(*TerminateMeetRequest)(nil),          // 15: meet.TerminateMeetRequest
	(*HangUpMeetByUserRequest)(nil),       // 16: meet.HangUpMeetByUserRequest
	(*InitializeInboundMeetResponse)(nil), // 17: meet.InitializeInboundMeetResponse
	(*RejectMeetByUserRequest)(nil),       // 18: meet.RejectMeetByUserRequest
}
var file_meet_meet_proto_depIdxs = []int32{
	2,  // 0: meet.Peer.person:type_name -> meet.Person
	0,  // 1: meet.BareResponse.response_code:type_name -> meet.ResponseCode
	3,  // 2: meet.JoinMeetByUserRequest.peer:type_name -> meet.Peer
	3,  // 3: meet.HangUpMeetByManagerRequest.peer:type_name -> meet.Peer
	1,  // 4: meet.CreateMeetRecordRequest.meet_record:type_name -> meet.AudioFile
	2,  // 5: meet.OutboundMeetRequest.user:type_name -> meet.Person
	3,  // 6: meet.OutboundMeetRequest.manager:type_name -> meet.Peer
	0,  // 7: meet.InboundMeetResponse.response_code:type_name -> meet.ResponseCode
	3,  // 8: meet.InboundMeetResponse.peer:type_name -> meet.Peer
	3,  // 9: meet.PrivateMeetRequest.manager:type_name -> meet.Peer
	3,  // 10: meet.JoinMeetByManagerRequest.peer:type_name -> meet.Peer
	0,  // 11: meet.JoinMeetByUserResponse.response_code:type_name -> meet.ResponseCode
	3,  // 12: meet.JoinMeetByUserResponse.peer:type_name -> meet.Peer
	3,  // 13: meet.HangUpMeetByUserRequest.peer:type_name -> meet.Peer
	2,  // 14: meet.RejectMeetByUserRequest.person:type_name -> meet.Person
	10, // 15: meet.MeetService.CreateOutboundMeet:input_type -> meet.OutboundMeetRequest
	12, // 16: meet.MeetService.CreatePrivateMeet:input_type -> meet.PrivateMeetRequest
	7,  // 17: meet.MeetService.HangUpMeetByManager:input_type -> meet.HangUpMeetByManagerRequest
	13, // 18: meet.MeetService.JoinMeetByManager:input_type -> meet.JoinMeetByManagerRequest
	15, // 19: meet.MeetService.TerminateMeet:input_type -> meet.TerminateMeetRequest
	5,  // 20: meet.MeetService.CreateInboundMeet:input_type -> meet.InboundMeetRequest
	9,  // 21: meet.MeetService.CreateMeetRecord:input_type -> meet.CreateMeetRecordRequest
	8,  // 22: meet.MeetService.InitializeInboundMeet:input_type -> meet.InitializeInboundMeetRequest
	6,  // 23: meet.MeetService.JoinMeetByUser:input_type -> meet.JoinMeetByUserRequest
	16, // 24: meet.MeetService.HangUpMeetByUser:input_type -> meet.HangUpMeetByUserRequest
	18, // 25: meet.MeetService.RejectMeetByUser:input_type -> meet.RejectMeetByUserRequest
	4,  // 26: meet.MeetService.CreateOutboundMeet:output_type -> meet.BareResponse
	4,  // 27: meet.MeetService.CreatePrivateMeet:output_type -> meet.BareResponse
	4,  // 28: meet.MeetService.HangUpMeetByManager:output_type -> meet.BareResponse
	4,  // 29: meet.MeetService.JoinMeetByManager:output_type -> meet.BareResponse
	4,  // 30: meet.MeetService.TerminateMeet:output_type -> meet.BareResponse
	11, // 31: meet.MeetService.CreateInboundMeet:output_type -> meet.InboundMeetResponse
	4,  // 32: meet.MeetService.CreateMeetRecord:output_type -> meet.BareResponse
	17, // 33: meet.MeetService.InitializeInboundMeet:output_type -> meet.InitializeInboundMeetResponse
	4,  // 34: meet.MeetService.JoinMeetByUser:output_type -> meet.BareResponse
	4,  // 35: meet.MeetService.HangUpMeetByUser:output_type -> meet.BareResponse
	4,  // 36: meet.MeetService.RejectMeetByUser:output_type -> meet.BareResponse
	26, // [26:37] is the sub-list for method output_type
	15, // [15:26] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_meet_meet_proto_init() }
func file_meet_meet_proto_init() {
	if File_meet_meet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_meet_meet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meet_meet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Person); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meet_meet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meet_meet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meet_meet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundMeetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meet_meet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinMeetByUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meet_meet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HangUpMeetByManagerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meet_meet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeInboundMeetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meet_meet_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMeetRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meet_meet_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutboundMeetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meet_meet_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundMeetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meet_meet_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivateMeetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meet_meet_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinMeetByManagerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meet_meet_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinMeetByUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meet_meet_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateMeetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meet_meet_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HangUpMeetByUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meet_meet_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeInboundMeetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meet_meet_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectMeetByUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_meet_meet_proto_msgTypes[14].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meet_meet_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_meet_meet_proto_goTypes,
		DependencyIndexes: file_meet_meet_proto_depIdxs,
		EnumInfos:         file_meet_meet_proto_enumTypes,
		MessageInfos:      file_meet_meet_proto_msgTypes,
	}.Build()
	File_meet_meet_proto = out.File
	file_meet_meet_proto_rawDesc = nil
	file_meet_meet_proto_goTypes = nil
	file_meet_meet_proto_depIdxs = nil
}
